#!/usr/bin/python
#
# Compares a number of codecs for what they do when presented with the
# "MPEG" test suite.
#
# Outputs a table with the samples down and the codecs across, giving
# bitrate and PSNR for each target.
#
import argparse
import sys

import mpeg_settings
import encoder
import pick_codec

def ListOneTarget(codecs, rate, videofile, do_score):
  print '%-28.28s %5d' % (videofile.basename, rate),
  for codec_name in codecs:
    codec = pick_codec.PickCodec(codec_name)
    bestsofar = codec.BestEncoding(rate, videofile)
    if do_score and not bestsofar.Score():
      bestsofar.Execute()
      bestsofar.Store()
    assert(bestsofar.Score())
    print ' %6d %4.1f' % (bestsofar.result['bitrate'],
                          bestsofar.result['psnr']),
  print ''

def ListResults(codecs, do_score):
  print '%-28s %5s' % ('File', 'Rate'),
  for c in codecs:
    print '%12s' % pick_codec.ShortName(c),
  print
  for classname in mpeg_settings.files.keys():
    for filename in mpeg_settings.files[classname]:
      videofile = encoder.Videofile('video/mpeg_video/' + filename)
      for rate in mpeg_settings.rates[classname]:
        ListOneTarget(codecs, rate, videofile, do_score)

def main():
  parser = argparse.ArgumentParser()
  parser.add_argument('--score', action='store_true', default=False)
  parser.add_argument('codecs', nargs='*',
                      default=pick_codec.codec_map.keys())
  args = parser.parse_args()
  ListResults(args.codecs, args.score)
  return 0

if __name__ == '__main__':
  sys.exit(main())
