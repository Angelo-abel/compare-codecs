#!/usr/bin/python
#
# Verifies whether any encodings have changed compared to what's in the
# database.
# Intended for use after upgrading software.
#
import argparse
import sys

import mpeg_settings
import encoder
import optimizer
import pick_codec

def VerifyOneTarget(codecs, rate, videofile):
  change_count = 0
  for codec_name in codecs:
    codec = pick_codec.PickCodec(codec_name)
    my_optimizer = optimizer.Optimizer(codec)
    bestsofar = my_optimizer.BestEncoding(rate, videofile)
    if not bestsofar.Result():
      print '%s rate %s file %s has no score' % (
        codec_name, rate, videofile.basename)
    else:
      if not bestsofar.VerifyEncode():
        print '%s rate %s file %s has changed encoding' % (
          codec_name, rate, videofile.basename)
        change_count += 1
  return change_count

def VerifyResults(codecs):
  change_count = 0
  for classname in mpeg_settings.files.keys():
    for filename in mpeg_settings.files[classname]:
      videofile = encoder.Videofile('video/mpeg_video/' + filename)
      for rate in mpeg_settings.rates[classname]:
        change_count += VerifyOneTarget(codecs, rate, videofile)
  return change_count

def main():
  parser = argparse.ArgumentParser()
  parser.add_argument('codecs', nargs='*',
                      default=pick_codec.codec_map.keys())
  args = parser.parse_args()
  change_count = VerifyResults(args.codecs)
  print 'Number of changes: %d' % change_count
  if change_count > 0:
    return 1
  return 0

if __name__ == '__main__':
  sys.exit(main())
