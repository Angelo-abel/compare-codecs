#!/usr/bin/python
# Copyright 2015 Google.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""
Show what configurations will be tried next for a given codec, rate and file.
"""

import argparse
import encoder
import optimizer
import pick_codec
import score_tools
import sys


def main():
  parser = argparse.ArgumentParser()
  parser.add_argument('rate')
  parser.add_argument('videofile')
  parser.add_argument("--codec")
  parser.add_argument('--criterion', default='psnr')

  args = parser.parse_args()

  videofile = encoder.Videofile(args.videofile)

  codec = pick_codec.PickCodec(args.codec)
  my_optimizer = optimizer.Optimizer(codec,
      score_function=score_tools.PickScorer(args.criterion))

  bitrate = int(args.rate)

  current_encoder = my_optimizer.BestEncoding(bitrate, videofile).encoder
  print 'Current:'
  print current_encoder.Hashname(), current_encoder.parameters.ToString()
  print 'Next:'
  considered_seen = set()
  while True:
    next_encoder = my_optimizer.BestUntriedEncoding(bitrate, videofile,
                                                    considered_seen).encoder
    if not next_encoder:
      break
    if next_encoder.Hashname() in considered_seen:
      print ('Same encoder (%s) returned twice. Stopping here.'
             % next_encoder.Hashname())
      break
    print next_encoder.Hashname(), next_encoder.parameters.ToString()
    considered_seen.add(next_encoder.Hashname())


if __name__ == '__main__':
  sys.exit(main())
